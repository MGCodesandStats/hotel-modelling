# Reference: https://xgboost.readthedocs.io/en/latest/R-package/xgboostPresentation.html
# TRAINING AND VALIDATION
require(xgboost)
library(Matrix)
H1<-read.csv("H1.csv")
H1
class(H1$Country)
class(H1$LeadTime)
class(H1$MarketSegment)
class(H1$DepositType)
IsCanceled<-as.numeric(factor(H1$IsCanceled))
IsCanceled
IsCanceled[IsCanceled == "1"] <- "0"
IsCanceled[IsCanceled == "2"] <- "1"
IsCanceled<-as.numeric(IsCanceled)
IsCanceled
leadtime<-as.numeric(H1$LeadTime)
leadtime
country<-as.numeric(factor(H1$Country))
country
marketsegment<-as.numeric(factor(H1$MarketSegment))
marketsegment
deposittype<-as.numeric(factor(H1$DepositType))
deposittype
customertype<-as.numeric(factor(H1$CustomerType))
customertype
rcps<-as.numeric(H1$RequiredCarParkingSpaces)
rcps
week<-as.numeric(H1$ArrivalDateWeekNumber)
week
df<-data.frame(leadtime,country,marketsegment,deposittype,customertype,rcps,week)
attach(df)
df<-as.matrix(df)
train <- df[1:32000,]
val <- df[32001:40060,]
train=as(train, "dgCMatrix")
train
val=as(val, "dgCMatrix")
val
IsCanceled_train=IsCanceled[1:32000]
IsCanceled_val=IsCanceled[32001:40060]
bst <- xgboost(data = train, label = IsCanceled_train, max.depth = 2, eta = 1, nthread = 2, nrounds = 2, objective = "binary:logistic")
pred <- predict(bst, val)
print(length(pred))
print(head(pred))
prediction <- as.numeric(pred > 0.5)
print(head(prediction))
err <- mean(as.numeric(pred > 0.5) != IsCanceled_val)
print(paste("val-error=", err))
# Importance Matrix
importance_matrix <- xgb.importance(model = bst)
print(importance_matrix)
xgb.plot.importance(importance_matrix = importance_matrix)
# TEST
H2<-read.csv("H2.csv")
H2
leadtime<-as.numeric(H2$LeadTime)
leadtime
country<-as.numeric(factor(H2$Country))
country
marketsegment<-as.numeric(factor(H2$MarketSegment))
marketsegment
deposittype<-as.numeric(factor(H2$DepositType))
deposittype
customertype<-as.numeric(factor(H2$CustomerType))
customertype
rcps<-as.numeric(H2$RequiredCarParkingSpaces)
rcps
week<-as.numeric(H2$ArrivalDateWeekNumber)
week
test<-data.frame(leadtime,country,marketsegment,deposittype,customertype,rcps,week)
attach(test)
test<-as.matrix(test)
test=as(test, "dgCMatrix")
test
IsCanceled_H2<-as.numeric(factor(H2$IsCanceled))
IsCanceled_H2
IsCanceled_H2[IsCanceled_H2 == "1"] <- "0"
IsCanceled_H2[IsCanceled_H2 == "2"] <- "1"
IsCanceled_H2<-as.numeric(IsCanceled_H2)
IsCanceled_H2
pred <- predict(bst, test)
print(length(pred))
print(head(pred))
prediction <- as.numeric(pred > 0.5)
print(head(prediction))
err <- mean(as.numeric(pred > 0.5) != IsCanceled_H2)
print(paste("test-error=", err))
#create data frame
data <- data.frame(technique = rep(c("tech1", "tech2", "tech3"), each = 10),
score = c(76, 77, 77, 81, 82, 82, 83, 84, 85, 89,
81, 82, 83, 83, 83, 84, 87, 90, 92, 93,
77, 78, 79, 88, 89, 90, 91, 95, 95, 98))
View(data)
#create data frame
data<-read.csv("H1.csv")
attach(data)
View(data)
View(data)
View(data)
#create data frame
data<-read.csv("H1.csv")
attach(data)
#view first six rows of data frame
head(data)
boxplot(LeadTime ~ DistributionChannel,
data = data,
main = "Lead Time By Group",
xlab = "Distribution Channel",
ylab = "Lead Time",
col = "green",
border = "black")
#fit the one-way ANOVA model
model <- aov(LeadTime ~ DistributionChannel, data = data)
#view model output
summary(model)
#perform pairwise t-tests with Bonferroni's correction
pairwise.t.test(data$score, data$technique, p.adjust.method="bonferroni")
#perform pairwise t-tests with Bonferroni's correction
pairwise.t.test(data$LeadTime, data$DistributionChannel, p.adjust.method="bonferroni")
#create data frame
data<-read.csv("H1.csv")
attach(data)
#view first six rows of data frame
head(data)
boxplot(LeadTime ~ DistributionChannel,
data = data,
main = "Lead Time By Group",
xlab = "Distribution Channel",
ylab = "Lead Time",
col = "green",
border = "black")
#fit the one-way ANOVA model
model <- aov(LeadTime ~ DistributionChannel, data = data)
#view model output
summary(model)
#perform pairwise t-tests with Bonferroni's correction
pairwise.t.test(data$LeadTime, data$DistributionChannel, p.adjust.method="bonferroni")
#create data frame
data<-read.csv("H1_random_sampling.csv")
attach(data)
#view first six rows of data frame
head(data)
boxplot(LeadTime ~ DistributionChannel,
data = data,
main = "Lead Time By Group",
xlab = "Distribution Channel",
ylab = "Lead Time",
col = "green",
border = "black")
#fit the one-way ANOVA model
model <- aov(LeadTime ~ DistributionChannel, data = data)
#view model output
summary(model)
#perform pairwise t-tests with Bonferroni's correction
pairwise.t.test(data$LeadTime, data$DistributionChannel, p.adjust.method="bonferroni")
#create data frame
data <- data.frame(technique = rep(c("tech1", "tech2", "tech3"), each = 10),
score = c(76, 77, 77, 81, 82, 82, 83, 84, 85, 89,
81, 82, 83, 83, 83, 84, 87, 90, 92, 93,
77, 78, 79, 88, 89, 90, 91, 95, 95, 98))
#view first six rows of data frame
head(data)
boxplot(score ~ technique,
data = data,
main = "Exam Scores by Studying Technique",
xlab = "Studying Technique",
ylab = "Exam Scores",
col = "steelblue",
border = "black")
#fit the one-way ANOVA model
model <- aov(score ~ technique, data = data)
#view model output
summary(model)
#perform pairwise t-tests with Bonferroni's correction
pairwise.t.test(data$score, data$technique, p.adjust.method="bonferroni")
#create data frame
data<-read.csv("H1_random_sampling.csv")
attach(data)
#view first six rows of data frame
head(data)
boxplot(LeadTime ~ DistributionChannel,
data = data,
main = "Lead Time By Group",
xlab = "Distribution Channel",
ylab = "Lead Time",
col = "green",
border = "black")
#fit the one-way ANOVA model
model <- aov(LeadTime ~ DistributionChannel, data = data)
#view model output
summary(model)
#perform pairwise t-tests with Bonferroni's correction
pairwise.t.test(data$LeadTime, data$DistributionChannel, p.adjust.method="bonferroni")
View(data)
pairwise.t.test(data$LeadTime, data$DistributionChannel, p.adjust.method="bonferroni")
pairwise.t.test(data$LeadTime, data$DistributionChannel, p.adjust.method="holm")
pairwise.t.test(data$LeadTime, data$DistributionChannel, p.adjust.method="hochberg")
pairwise.t.test(data$LeadTime, data$DistributionChannel, p.adjust.method="hommel")
# https://www.statology.org/bonferroni-correction-in-r/
data<-read.csv("H1_random_sampling.csv")
attach(data)
#view first six rows of data frame
head(data)
boxplot(LeadTime ~ DistributionChannel,
data = data,
main = "Lead Time By Group",
xlab = "Distribution Channel",
ylab = "Lead Time",
col = "green",
border = "black")
#fit the one-way ANOVA model
model <- aov(LeadTime ~ DistributionChannel, data = data) # low p-value: lead time not equal among groups
#view model output
summary(model)
#perform pairwise t-tests with Bonferroni's correction
pairwise.t.test(data$LeadTime, data$DistributionChannel, p.adjust.method="bonferroni")
pairwise.t.test(data$LeadTime, data$DistributionChannel, p.adjust.method="holm")
pairwise.t.test(data$LeadTime, data$DistributionChannel, p.adjust.method="fdr")
# https://www.statology.org/bonferroni-correction-in-r/
data<-read.csv("H1_random_sampling.csv")
attach(data)
View(data)
# https://www.statology.org/bonferroni-correction-in-r/
data<-read.csv("H1_random_sampling.csv")
attach(data)
#view first six rows of data frame
head(data)
boxplot(LeadTime ~ DistributionChannel,
data = data,
main = "Lead Time By Group",
xlab = "Distribution Channel",
ylab = "Lead Time",
col = "green",
border = "black")
#fit the one-way ANOVA model
model <- aov(LeadTime ~ DistributionChannel, data = data) # low p-value: lead time not equal among groups
#view model output
summary(model)
#perform pairwise t-tests with Bonferroni's correction
pairwise.t.test(data$LeadTime, data$DistributionChannel, p.adjust.method="bonferroni")
pairwise.t.test(data$LeadTime, data$DistributionChannel, p.adjust.method="holm")
pairwise.t.test(data$LeadTime, data$DistributionChannel, p.adjust.method="fdr")
# https://www.statology.org/bonferroni-correction-in-r/
data<-read.csv("H1_random_sampling.csv")
attach(data)
#view first six rows of data frame
head(data)
boxplot(LeadTime ~ DistributionChannel,
data = data,
main = "Lead Time By Group",
xlab = "Distribution Channel",
ylab = "Lead Time",
col = "green",
border = "black")
#fit the one-way ANOVA model
model <- aov(LeadTime ~ DistributionChannel, data = data) # low p-value: lead time not equal among groups
#view model output
summary(model)
#perform pairwise t-tests with Bonferroni's correction
pairwise.t.test(data$LeadTime, data$DistributionChannel, p.adjust.method="bonferroni")
View(data)
View(data)
# https://www.statology.org/bonferroni-correction-in-r/
data<-read.csv("H1_random_sampling.csv")
attach(data)
#view first six rows of data frame
head(data)
boxplot(ADR ~ DistributionChannel,
data = data,
main = "ADR By Group",
xlab = "Distribution Channel",
ylab = "ADR",
col = "green",
border = "black")
#fit the one-way ANOVA model
model <- aov(ADR ~ DistributionChannel, data = data) # low p-value: lead time not equal among groups
#view model output
summary(model)
#perform pairwise t-tests with Bonferroni's correction
pairwise.t.test(data$ADR, data$DistributionChannel, p.adjust.method="bonferroni")
pairwise.t.test(data$ADR, data$DistributionChannel, p.adjust.method="holm")
pairwise.t.test(data$ADR, data$DistributionChannel, p.adjust.method="fdr")
# https://www.statology.org/bonferroni-correction-in-r/
# Compare lead time and ADR
data<-read.csv("H1_random_sampling.csv")
attach(data)
View(data)
# https://www.statology.org/bonferroni-correction-in-r/
# Compare lead time and ADR
data<-read.csv("H1_random_sampling.csv")
attach(data)
#view first six rows of data frame
head(data)
boxplot(ADR ~ DistributionChannel,
data = data,
main = "ADR By Group",
xlab = "Distribution Channel",
ylab = "ADR",
col = "green",
border = "black")
#fit the one-way ANOVA model
model <- aov(ADR ~ DistributionChannel, data = data) # low p-value: lead time not equal among groups
#view model output
summary(model)
# https://www.statology.org/bonferroni-correction-in-r/
# Compare lead time and ADR
data<-read.csv("H1_random_sampling.csv")
attach(data)
#view first six rows of data frame
head(data)
boxplot(ADR ~ DistributionChannel,
data = data,
main = "ADR By Group",
xlab = "Distribution Channel",
ylab = "ADR",
col = "green",
border = "black")
#fit the one-way ANOVA model
model <- aov(ADR ~ DistributionChannel, data = data) # low p-value: lead time not equal among groups
#view model output
summary(model)
#perform pairwise t-tests with Bonferroni's correction
pairwise.t.test(data$ADR, data$DistributionChannel, p.adjust.method="bonferroni")
require(xgboost)
library(Matrix)
install.packages("xgboost")
install.packages("xgboost")
require(xgboost)
library(Matrix)
H1<-read.csv("H1.csv")
H1
class(H1$Country)
class(H1$LeadTime)
class(H1$MarketSegment)
class(H1$DepositType)
IsCanceled<-as.numeric(factor(H1$IsCanceled))
IsCanceled
IsCanceled[IsCanceled == "1"] <- "0"
IsCanceled[IsCanceled == "2"] <- "1"
IsCanceled<-as.numeric(IsCanceled)
IsCanceled
leadtime<-as.numeric(H1$LeadTime)
leadtime
country<-as.numeric(factor(H1$Country))
country
marketsegment<-as.numeric(factor(H1$MarketSegment))
marketsegment
deposittype<-as.numeric(factor(H1$DepositType))
deposittype
customertype<-as.numeric(factor(H1$CustomerType))
customertype
rcps<-as.numeric(H1$RequiredCarParkingSpaces)
rcps
week<-as.numeric(H1$ArrivalDateWeekNumber)
week
df<-data.frame(leadtime,country,marketsegment,deposittype,customertype,rcps,week)
attach(df)
df<-as.matrix(df)
train <- df[1:32000,]
val <- df[32001:40060,]
train=as(train, "dgCMatrix")
train
val=as(val, "dgCMatrix")
val
IsCanceled_train=IsCanceled[1:32000]
IsCanceled_val=IsCanceled[32001:40060]
bst <- xgboost(data = train, label = IsCanceled_train, max.depth = 2, eta = 1, nthread = 2, nrounds = 2, objective = "binary:logistic")
pred <- predict(bst, val)
print(length(pred))
print(head(pred))
prediction <- as.numeric(pred > 0.5)
print(head(prediction))
err <- mean(as.numeric(pred > 0.5) != IsCanceled_val)
print(paste("val-error=", err))
# Importance Matrix
importance_matrix <- xgb.importance(model = bst)
print(importance_matrix)
xgb.plot.importance(importance_matrix = importance_matrix)
# TEST
H2<-read.csv("H2.csv")
H2
leadtime<-as.numeric(H2$LeadTime)
leadtime
country<-as.numeric(factor(H2$Country))
country
marketsegment<-as.numeric(factor(H2$MarketSegment))
marketsegment
deposittype<-as.numeric(factor(H2$DepositType))
deposittype
customertype<-as.numeric(factor(H2$CustomerType))
customertype
rcps<-as.numeric(H2$RequiredCarParkingSpaces)
rcps
week<-as.numeric(H2$ArrivalDateWeekNumber)
week
test<-data.frame(leadtime,country,marketsegment,deposittype,customertype,rcps,week)
attach(test)
test<-as.matrix(test)
test=as(test, "dgCMatrix")
test
IsCanceled_H2<-as.numeric(factor(H2$IsCanceled))
IsCanceled_H2
IsCanceled_H2[IsCanceled_H2 == "1"] <- "0"
IsCanceled_H2[IsCanceled_H2 == "2"] <- "1"
IsCanceled_H2<-as.numeric(IsCanceled_H2)
IsCanceled_H2
pred <- predict(bst, test)
print(length(pred))
print(head(pred))
prediction <- as.numeric(pred > 0.5)
print(head(prediction))
err <- mean(as.numeric(pred > 0.5) != IsCanceled_H2)
print(paste("test-error=", err))
# https://stat-methods.com/home/mann-whitney-u-r/
dat<-read.csv("/media/veracrypt9/groups/group b1/github/mgcodesandstats/active/hotel-modelling/H1")
# https://stat-methods.com/home/mann-whitney-u-r/
dat<-read.csv("/media/veracrypt9/groups/group b1/github/mgcodesandstats/active/hotel-modelling/H1.csv")
attach(dat)
View(dat)
View(dat)
# Kruskal-Wallis Test
kruskal.test(ADR ~ MarketSegment, data = dat)
library(rstatix)
library(dplyr)
dat %>% kruskal_effsize(ADR ~ MarketSegment)
# Grouped data
dat %>%
group_by(MarketSegment) %>%
kruskal_effsize(ADR ~ MarketSegment)
library(pwr)
pwr.anova.test(k=3,f=.431,sig.level=.05,power=.8)
